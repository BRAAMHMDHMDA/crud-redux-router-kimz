{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  records: [],\n  loading: false,\n  error: null\n};\n//Get Posts\nexport const fetchPosts = createAsyncThunk(\"post/fetchPosts\", async (_, thunkAPI) => {\n  try {\n    const response = await fetch(\"http://localhost:3030/posts\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n//Create Post\nexport const createPost = createAsyncThunk(\"post/createPost\", async (post, thunkAPI) => {\n  try {\n    const response = await fetch(\"http://localhost:3030/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n//Delete Post\nexport const deletePost = createAsyncThunk(\"post/deletePost\", async (id, thunkAPI) => {\n  try {\n    const response = await fetch(`http://localhost:3030/posts/${id}`, {\n      method: \"DELETE\"\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    //Get Posts\n    [fetchPosts.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.records = action.payload;\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    //Create Post\n    [createPost.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.records.push(action.payload);\n    },\n    [createPost.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    //Delete Post\n    [deletePost.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [deletePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.records = state.records.filter(el => el.id !== action.payload.id);\n    },\n    [deletePost.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","records","loading","error","fetchPosts","_","thunkAPI","response","fetch","data","json","rejectWithValue","message","createPost","post","method","headers","body","JSON","stringify","deletePost","id","postSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","push","filter","el","reducer"],"sources":["C:/Users/Lenovo/Desktop/redux-router-crud-main/src/state/postSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  records: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n//Get Posts\r\nexport const fetchPosts = createAsyncThunk(\r\n  \"post/fetchPosts\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3030/posts\");\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n//Create Post\r\nexport const createPost = createAsyncThunk(\r\n  \"post/createPost\",\r\n  async (post, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3030/posts\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n//Delete Post\r\nexport const deletePost = createAsyncThunk(\r\n  \"post/deletePost\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3030/posts/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    //Get Posts\r\n    [fetchPosts.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchPosts.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.records = action.payload;\r\n    },\r\n    [fetchPosts.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    //Create Post\r\n    [createPost.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [createPost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.records.push(action.payload);\r\n    },\r\n    [createPost.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    //Delete Post\r\n    [deletePost.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [deletePost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.records = state.records.filter((el) => el.id !== action.payload.id);\r\n    },\r\n    [deletePost.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}