{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  records: [],\n  loading: false,\n  error: null\n};\nexport const fetchPosts = createAsyncThunk(\"post/fetchPosts\", async thunkAPI => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  const data = await response.json();\n  return data;\n});\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    getPosts: state => {\n      state.loading = true;\n    },\n    getPostsSuccess: (state, action) => {\n      state.loading = false;\n      state.records = action.payload;\n    },\n    getPostsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  },\n  extraReducers: {}\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","records","loading","error","fetchPosts","thunkAPI","response","fetch","data","json","postSlice","name","reducers","getPosts","state","getPostsSuccess","action","payload","getPostsFailure","extraReducers","reducer"],"sources":["C:/Users/Lenovo/Desktop/redux-router-crud-main/src/state/postSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  records: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchPosts = createAsyncThunk(\r\n  \"post/fetchPosts\",\r\n  async (thunkAPI) => {\r\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    getPosts: (state) => {\r\n      state.loading = true;\r\n    },\r\n    getPostsSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.records = action.payload;\r\n    },\r\n    getPostsFailure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,iBAAiB,EACjB,MAAOO,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;EAC1E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC,CACF;AACD,MAAME,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZX,YAAY;EACZY,QAAQ,EAAE;IACRC,QAAQ,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACZ,OAAO,GAAG,IAAI;IACtB,CAAC;IACDa,eAAe,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,OAAO,GAAGe,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,eAAe,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO;IAC9B;EACF,CAAC;EACDE,aAAa,EAAE,CAAC;AAClB,CAAC,CAAC;AAEF,eAAeT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module"}