{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\redux-router-crud-main\\\\src\\\\components\\\\Loading.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Loading(_ref) {\n  let {\n    loading,\n    error,\n    children\n  } = _ref;\n  const loadingDiv = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center\",\n    children: \"Loading (^-^) ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 22\n  }, this);\n  const errorDiv = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center\",\n    children: \"Error (-_-)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 20\n  }, this);\n  const elementType = \"\";\n  console.log(children.type.render);\n  const renderHandler = () => {\n    if (elementType === \"Button\") {\n      const cloneButton = /*#__PURE__*/React.cloneElement(children, {\n        disabled: true\n      }, \"Loading\");\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: loading ? cloneButton : error ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [children, \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true) : children\n      }, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loading ? loadingDiv : error ? errorDiv : children\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? loadingDiv : error ? errorDiv : children\n  }, void 0, false);\n}\n_c = Loading;\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","Loading","loading","error","children","loadingDiv","errorDiv","elementType","console","log","type","render","renderHandler","cloneButton","cloneElement","disabled"],"sources":["C:/Users/Lenovo/Desktop/redux-router-crud-main/src/components/Loading.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Loading({ loading, error, children }) {\r\n  const loadingDiv = <p className=\"text-center\">Loading (^-^) ...</p>;\r\n  const errorDiv = <p className=\"text-center\">Error (-_-)</p>;\r\n  const elementType = \"\";\r\n  console.log(children.type.render);\r\n  const renderHandler = () => {\r\n    if (elementType === \"Button\") {\r\n      const cloneButton = React.cloneElement(\r\n        children,\r\n        { disabled: true },\r\n        \"Loading\"\r\n      );\r\n      return (\r\n        <>\r\n          {loading ? (\r\n            cloneButton\r\n          ) : error ? (\r\n            <>\r\n              {children} <p>{error}</p>\r\n            </>\r\n          ) : (\r\n            children\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    return <>{loading ? loadingDiv : error ? errorDiv : children}</>;\r\n  };\r\n\r\n  return <>{loading ? loadingDiv : error ? errorDiv : children}</>;\r\n}\r\n\r\nexport default Loading;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,OAAO,OAA+B;EAAA,IAA9B;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAC3C,MAAMC,UAAU,gBAAG;IAAG,SAAS,EAAC,aAAa;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAsB;EACnE,MAAMC,QAAQ,gBAAG;IAAG,SAAS,EAAC,aAAa;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAgB;EAC3D,MAAMC,WAAW,GAAG,EAAE;EACtBC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,MAAM,CAAC;EACjC,MAAMC,aAAa,GAAG,MAAM;IAC1B,IAAIL,WAAW,KAAK,QAAQ,EAAE;MAC5B,MAAMM,WAAW,gBAAGb,KAAK,CAACc,YAAY,CACpCV,QAAQ,EACR;QAAEW,QAAQ,EAAE;MAAK,CAAC,EAClB,SAAS,CACV;MACD,oBACE;QAAA,UACGb,OAAO,GACNW,WAAW,GACTV,KAAK,gBACP;UAAA,WACGC,QAAQ,oBAAE;YAAA,UAAID;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,gBACxB,GAEHC;MACD,iBACA;IAEP;IACA,oBAAO;MAAA,UAAGF,OAAO,GAAGG,UAAU,GAAGF,KAAK,GAAGG,QAAQ,GAAGF;IAAQ,iBAAI;EAClE,CAAC;EAED,oBAAO;IAAA,UAAGF,OAAO,GAAGG,UAAU,GAAGF,KAAK,GAAGG,QAAQ,GAAGF;EAAQ,iBAAI;AAClE;AAAC,KA9BQH,OAAO;AAgChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}