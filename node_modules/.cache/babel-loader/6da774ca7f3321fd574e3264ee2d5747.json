{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  records: [],\n  record: null,\n  loading: false,\n  error: null\n};\n//Get Posts\nexport const fetchPosts = createAsyncThunk(\"post/fetchPosts\", async (_, thunkAPI) => {\n  try {\n    const response = await fetch(\"http://localhost:3030/posts\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n// Get Post Details\nexport const fetchPostDetails = createAsyncThunk(\"post/fetchPostDetails\", async (id, thunkAPI) => {\n  try {\n    const response = await fetch(`http://localhost:3030/posts/${id}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n//Create Post\nexport const createPost = createAsyncThunk(\"post/createPost\", async (post, thunkAPI) => {\n  try {\n    const response = await fetch(\"http://localhost:3030/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n//Delete Post\nexport const deletePost = createAsyncThunk(\"post/deletePost\", async (id, thunkAPI) => {\n  try {\n    await fetch(`http://localhost:3030/posts/${id}`, {\n      method: \"DELETE\"\n    });\n    return id;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n//Edit Post\nexport const editPost = createAsyncThunk(\"post/editPost\", async (post, thunkAPI) => {\n  try {\n    const response = await fetch(`http://localhost:3030/posts/${post.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    cleanRecord: state => {\n      state.record = null;\n    }\n  },\n  extraReducers: {\n    //Get Posts\n    [fetchPosts.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.records = action.payload;\n    },\n    [fetchPosts.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    //Get Post Details\n    [fetchPostDetails.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [fetchPostDetails.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.record = action.payload;\n    },\n    [fetchPostDetails.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    //Create Post\n    [createPost.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.records.push(action.payload);\n    },\n    [createPost.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    //Delete Post\n    [deletePost.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [deletePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.records = state.records.filter(el => el.id !== action.payload);\n    },\n    [deletePost.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    //Edit Post\n    [editPost.pending]: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    [editPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      //   state.records = state.records.map((el) =>\n      //     el.id === action.payload.id ? action.payload : el\n      //   );\n      state.record = action.payload;\n    },\n    [editPost.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  cleanRecord\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","records","record","loading","error","fetchPosts","_","thunkAPI","response","fetch","data","json","rejectWithValue","message","fetchPostDetails","id","createPost","post","method","headers","body","JSON","stringify","deletePost","editPost","postSlice","name","reducers","cleanRecord","state","extraReducers","pending","action","fulfilled","payload","rejected","push","filter","el","actions","reducer"],"sources":["C:/Users/Lenovo/Desktop/redux-router-crud-main/src/state/postSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  records: [],\r\n  record: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n//Get Posts\r\nexport const fetchPosts = createAsyncThunk(\r\n  \"post/fetchPosts\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3030/posts\");\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n// Get Post Details\r\nexport const fetchPostDetails = createAsyncThunk(\r\n  \"post/fetchPostDetails\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3030/posts/${id}`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n//Create Post\r\nexport const createPost = createAsyncThunk(\r\n  \"post/createPost\",\r\n  async (post, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3030/posts\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n//Delete Post\r\nexport const deletePost = createAsyncThunk(\r\n  \"post/deletePost\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      await fetch(`http://localhost:3030/posts/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      return id;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n//Edit Post\r\nexport const editPost = createAsyncThunk(\r\n  \"post/editPost\",\r\n  async (post, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3030/posts/${post.id}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    cleanRecord: (state) => {\r\n      state.record = null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //Get Posts\r\n    [fetchPosts.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchPosts.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.records = action.payload;\r\n    },\r\n    [fetchPosts.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    //Get Post Details\r\n    [fetchPostDetails.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchPostDetails.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.record = action.payload;\r\n    },\r\n    [fetchPostDetails.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    //Create Post\r\n    [createPost.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [createPost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.records.push(action.payload);\r\n    },\r\n    [createPost.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    //Delete Post\r\n    [deletePost.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [deletePost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      state.records = state.records.filter((el) => el.id !== action.payload);\r\n    },\r\n    [deletePost.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    //Edit Post\r\n    [editPost.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    [editPost.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n      //   state.records = state.records.map((el) =>\r\n      //     el.id === action.payload.id ? action.payload : el\r\n      //   );\r\n      state.record = action.payload;\r\n    },\r\n    [editPost.rejected]: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { cleanRecord } = postSlice.actions;\r\nexport default postSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}