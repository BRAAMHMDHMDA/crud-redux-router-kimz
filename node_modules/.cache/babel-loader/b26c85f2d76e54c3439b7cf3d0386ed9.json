{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\redux-router-crud-main\\\\src\\\\pages\\\\EditPost.jsx\",\n  _s = $RefreshSig$();\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport { usePostDetails } from \"../hooks/use-post-details\";\nimport { editPost, cleanRecord } from \"../state/postSlice\";\nimport { withGuard } from \"../util/withGuard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditPost() {\n  _s();\n  const {\n    loading,\n    error,\n    record\n  } = usePostDetails();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   if (record) {\n  //     setTitle(record.title);\n  //     setDescription(record.description);\n  //   }\n  // }, [record]);\n\n  // useEffect(() => {\n  //   dispatch(cleanRecord());\n  // }, []);\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   dispatch(editPost({ id: record.id, title, description }))\n  //     .unwrap()\n  //     .then(() => {\n  //       navigate(\"/\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  const formik = useFormik({\n    initialValues: {\n      title: record ? record.title : \"\",\n      description: record ? record.description : \"\"\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      const id = Math.floor(Math.random() * 500);\n      dispatch(createPost({\n        id,\n        ...values\n      })).unwrap().then(() => {\n        navigate(\"/\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: title,\n          placeholder: \"Enter Title\",\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Loading, {\n        loading: loading,\n        error: error,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"N8jKPMoCA01WkdjG3lCgkvOMDzk=\", false, function () {\n  return [usePostDetails, useDispatch, useNavigate, useFormik];\n});\n_c = EditPost;\nexport default _c2 = withGuard(EditPost);\nvar _c, _c2;\n$RefreshReg$(_c, \"EditPost\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useFormik","React","useEffect","useState","Form","Button","useDispatch","useNavigate","Loading","usePostDetails","editPost","cleanRecord","withGuard","EditPost","loading","error","record","title","setTitle","description","setDescription","dispatch","navigate","formik","initialValues","validationSchema","SignupSchema","onSubmit","values","id","Math","floor","random","createPost","unwrap","then","catch","err","console","log","e","handleSubmit","target","value"],"sources":["C:/Users/Lenovo/Desktop/redux-router-crud-main/src/pages/EditPost.jsx"],"sourcesContent":["import { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport { usePostDetails } from \"../hooks/use-post-details\";\r\nimport { editPost, cleanRecord } from \"../state/postSlice\";\r\nimport { withGuard } from \"../util/withGuard\";\r\n\r\nfunction EditPost() {\r\n  const { loading, error, record } = usePostDetails();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   if (record) {\r\n  //     setTitle(record.title);\r\n  //     setDescription(record.description);\r\n  //   }\r\n  // }, [record]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(cleanRecord());\r\n  // }, []);\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   dispatch(editPost({ id: record.id, title, description }))\r\n  //     .unwrap()\r\n  //     .then(() => {\r\n  //       navigate(\"/\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: record ? record.title : \"\",\r\n      description: record ? record.description : \"\",\r\n    },\r\n    validationSchema: SignupSchema,\r\n    onSubmit: (values) => {\r\n      const id = Math.floor(Math.random() * 500);\r\n      dispatch(createPost({ id, ...values }))\r\n        .unwrap()\r\n        .then(() => {\r\n          navigate(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={title}\r\n            placeholder=\"Enter Title\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Loading loading={loading} error={error}>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n        </Loading>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withGuard(EditPost);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}