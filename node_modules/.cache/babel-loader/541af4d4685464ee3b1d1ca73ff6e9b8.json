{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\redux-router-crud-main\\\\src\\\\pages\\\\EditPost.jsx\",\n  _s = $RefreshSig$();\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport { usePostDetails } from \"../hooks/use-post-details\";\nimport { editPost, cleanRecord } from \"../state/postSlice\";\nimport { withGuard } from \"../util/withGuard\";\nimport { postSchema } from \"../util/validationSchema\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditPost() {\n  _s();\n  const {\n    loading,\n    error,\n    record\n  } = usePostDetails();\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   if (record) {\n  //     setTitle(record.title);\n  //     setDescription(record.description);\n  //   }\n  // }, [record]);\n\n  // useEffect(() => {\n  //   dispatch(cleanRecord());\n  // }, []);\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   dispatch(editPost({ id: record.id, title, description }))\n  //     .unwrap()\n  //     .then(() => {\n  //       navigate(\"/\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  const formik = useFormik({\n    initialValues: {\n      title: record ? record === null || record === void 0 ? void 0 : record.title : \"\",\n      description: record ? record === null || record === void 0 ? void 0 : record.description : \"\"\n    },\n    validationSchema: postSchema,\n    enableReinitialize: true,\n    onSubmit: values => {\n      dispatch(editPost({\n        id: record.id,\n        title,\n        description\n      })).unwrap().then(() => {\n        navigate(\"/\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Title\"\n          // value={title}\n          // onChange={(e) => setTitle(e.target.value)}\n          // required\n          ,\n          onChange: formik.handleChange,\n          value: formik.values.title,\n          name: \"title\",\n          isValid: formik.touched.title && !formik.errors.title,\n          isInvalid: formik.touched.title && formik.errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: formik.errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3\n          // value={description}\n          // onChange={(e) => setDescription(e.target.value)}\n          // required\n          ,\n          onChange: formik.handleChange,\n          value: formik.values.description,\n          name: \"description\",\n          isValid: formik.touched.description && !formik.errors.description,\n          isInvalid: formik.touched.description && formik.errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: formik.errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Loading, {\n        loading: loading,\n        error: error,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"ianYr41N8ZKtHlHPRsvarFwimYM=\", false, function () {\n  return [usePostDetails, useDispatch, useNavigate, useFormik];\n});\n_c = EditPost;\nexport default _c2 = withGuard(EditPost);\nvar _c, _c2;\n$RefreshReg$(_c, \"EditPost\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useFormik","React","useEffect","useState","Form","Button","useDispatch","useNavigate","Loading","usePostDetails","editPost","cleanRecord","withGuard","postSchema","EditPost","loading","error","record","dispatch","navigate","formik","initialValues","title","description","validationSchema","enableReinitialize","onSubmit","values","id","unwrap","then","catch","err","console","log","e","handleSubmit","handleChange","touched","errors"],"sources":["C:/Users/Lenovo/Desktop/redux-router-crud-main/src/pages/EditPost.jsx"],"sourcesContent":["import { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport { usePostDetails } from \"../hooks/use-post-details\";\r\nimport { editPost, cleanRecord } from \"../state/postSlice\";\r\nimport { withGuard } from \"../util/withGuard\";\r\nimport { postSchema } from \"../util/validationSchema\";\r\n\r\nfunction EditPost() {\r\n  const { loading, error, record } = usePostDetails();\r\n  // const [title, setTitle] = useState(\"\");\r\n  // const [description, setDescription] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   if (record) {\r\n  //     setTitle(record.title);\r\n  //     setDescription(record.description);\r\n  //   }\r\n  // }, [record]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(cleanRecord());\r\n  // }, []);\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   dispatch(editPost({ id: record.id, title, description }))\r\n  //     .unwrap()\r\n  //     .then(() => {\r\n  //       navigate(\"/\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: record ? record?.title : \"\",\r\n      description: record ? record?.description : \"\",\r\n    },\r\n    validationSchema: postSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: (values) => {\r\n      dispatch(editPost({ id: record.id, title, description }))\r\n        .unwrap()\r\n        .then(() => {\r\n          navigate(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Title\"\r\n            // value={title}\r\n            // onChange={(e) => setTitle(e.target.value)}\r\n            // required\r\n            onChange={formik.handleChange}\r\n            value={formik.values.title}\r\n            name=\"title\"\r\n            isValid={formik.touched.title && !formik.errors.title}\r\n            isInvalid={formik.touched.title && formik.errors.title}\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.title}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            // value={description}\r\n            // onChange={(e) => setDescription(e.target.value)}\r\n            // required\r\n            onChange={formik.handleChange}\r\n            value={formik.values.description}\r\n            name=\"description\"\r\n            isValid={formik.touched.description && !formik.errors.description}\r\n            isInvalid={formik.touched.description && formik.errors.description}\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.description}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Loading loading={loading} error={error}>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n        </Loading>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withGuard(EditPost);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}